/*
 * Copyright (c) 2018-2021 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#version 450
#extension GL_EXT_samplerless_texture_functions : require
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform texture2D Source;
layout(set = 0, binding = 1, r32f) uniform writeonly image2D Destination;

void _main(uvec3 did)
{
    uvec2 sizeQueryTemp = uvec2(textureSize(Source, 0));
    uvec2 screen_size;
    screen_size.x = sizeQueryTemp.x;
    screen_size.y = sizeQueryTemp.y;
    if ((did.x < screen_size.x) && (did.y < screen_size.y))
    {
        float storeTemp = texelFetch(Source, ivec2(did.xy), 0).x;
        imageStore(Destination, ivec2(did.xy), vec4(storeTemp));
    }
}

void main()
{
    uvec3 did = gl_GlobalInvocationID;
    uvec3 param = did;
    _main(param);
}

